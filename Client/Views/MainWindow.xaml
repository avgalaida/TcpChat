<Window x:Class="Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Client.Utilities"
        Title="Tcp Chat" Height="600" Width="400" Background="#F0F4F8"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <!-- Шаблон для отправленных сообщений (должны отображаться справа) -->
        <DataTemplate x:Key="SentMessageTemplate">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5" MaxWidth="300">
                <Border Background="#D1E7FF" CornerRadius="10" Padding="10">
                    <StackPanel>
                        <TextBlock Text="{Binding Sender}" FontWeight="Bold" Foreground="Black" />
                        <TextBlock Text="{Binding Content}" TextWrapping="Wrap" Foreground="Black" MaxWidth="280"/>
                        <TextBlock Text="{Binding Timestamp, StringFormat=HH:mm}" FontSize="10" HorizontalAlignment="Right" Foreground="Gray" />
                    </StackPanel>
                </Border>
            </StackPanel>
        </DataTemplate>

        <!-- Шаблон для полученных сообщений (должны отображаться слева) -->
        <DataTemplate x:Key="ReceivedMessageTemplate">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5" MaxWidth="300">
                <Border Background="#E8E8E8" CornerRadius="10" Padding="10">
                    <StackPanel>
                        <TextBlock Text="{Binding Sender}" FontWeight="Bold" Foreground="Black" />
                        <TextBlock Text="{Binding Content}" TextWrapping="Wrap" Foreground="Black" MaxWidth="280"/>
                        <TextBlock Text="{Binding Timestamp, StringFormat=HH:mm}" FontSize="10" HorizontalAlignment="Right" Foreground="Gray" />
                    </StackPanel>
                </Border>
            </StackPanel>
        </DataTemplate>

        <!-- Селектор шаблонов сообщений -->
        <local:MessageTemplateSelector x:Key="MessageTemplateSelector"
                                       SentMessageTemplate="{StaticResource SentMessageTemplate}"
                                       ReceivedMessageTemplate="{StaticResource ReceivedMessageTemplate}" />

        <!-- Стиль для ListBoxItem с анимацией появления -->
        <Style TargetType="ListBoxItem">
            <Setter Property="Opacity" Value="0"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0.0" To="1.0" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для кнопок -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="#D1E7FF"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="15"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Подсветка при наведении -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B3D9FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#D1E7FF"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Конвертеры видимости -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Панель подключения -->
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="5" HorizontalAlignment="Right">
            <Button Content="Подгрузить историю" 
                    Command="{Binding RequestHistoryCommand}" 
                    Width="150" 
                    Margin="5" 
                    Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Button Content="Подключиться" 
                    Command="{Binding ReconnectCommand}" 
                    Width="120" 
                    Visibility="{Binding IsConnected, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
            <Button Content="Отключиться" 
                    Command="{Binding DisconnectCommand}" 
                    Width="120" 
                    Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Margin="5,0,0,0"/>
        </StackPanel>

        <!-- Список сообщений с автоматическим скроллом -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Name="ScrollViewer">
            <ListBox x:Name="MessagesListBox"
                     ItemsSource="{Binding Messages}" 
                     ItemTemplateSelector="{StaticResource MessageTemplateSelector}" 
                     Background="#F0F4F8" 
                     BorderThickness="0" 
                     Grid.Row="1"
                     HorizontalContentAlignment="Stretch" />
        </ScrollViewer>

        <!-- Поле ввода и кнопка отправки -->
        <Grid Grid.Row="2" Margin="5" Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBox x:Name="MessageTextBox"
                     Text="{Binding NewMessage, UpdateSourceTrigger=PropertyChanged}" 
                     Grid.Column="0" 
                     Margin="0,0,5,0" 
                     KeyDown="MessageTextBox_KeyDown"
                     IsEnabled="{Binding IsConnected}" />

            <Button Content="Отправить" 
                    Command="{Binding SendMessageCommand}" 
                    Grid.Column="1" 
                    Width="100" 
                    IsEnabled="{Binding IsConnected}" />
        </Grid>

        <!-- Статусная строка -->
        <StatusBar Grid.Row="3">
            <TextBlock Text="{Binding ConnectionStatus}" />
        </StatusBar>
    </Grid>
</Window>